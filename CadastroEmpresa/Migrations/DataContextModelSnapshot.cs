// <auto-generated />
using System;
using CadastroEmpresa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CadastroEmpresa.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CadastroEmpresa.Model.DepartamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("CadastroEmpresa.Model.DocumentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarteiraTrabalho")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("CTPS");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("Cpf");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroRg")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NumeroRg");

                    b.Property<string>("PisPasep")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("PisPasep");

                    b.Property<string>("TituloEleitor")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("TituloEleitor");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Documento", (string)null);
                });

            modelBuilder.Entity("CadastroEmpresa.Model.FuncionarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimento");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("Nacionalidade");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("Name");

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("Naturalidade");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("CadastroEmpresa.Model.DocumentoModel", b =>
                {
                    b.HasOne("CadastroEmpresa.Model.FuncionarioModel", "FuncionarioModel")
                        .WithOne("DocumentoModel")
                        .HasForeignKey("CadastroEmpresa.Model.DocumentoModel", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuncionarioModel");
                });

            modelBuilder.Entity("CadastroEmpresa.Model.FuncionarioModel", b =>
                {
                    b.HasOne("CadastroEmpresa.Model.DepartamentoModel", "DepartamentoModel")
                        .WithMany("Funcionarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DepartamentoModel");
                });

            modelBuilder.Entity("CadastroEmpresa.Model.DepartamentoModel", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("CadastroEmpresa.Model.FuncionarioModel", b =>
                {
                    b.Navigation("DocumentoModel")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
